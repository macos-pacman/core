# Maintainer: Felix Yan <felixonmars@archlinux.org>
# Maintainer: Bruno Pagani <archange@archlinux.org>
# Contributor: St√©phane Gaudreault <stephane@archlinux.org>
# Contributor: Stefan Husmann <stefan-husmann@t-online.de>
# Contributor: Angel 'angvp' Velasquez <angvp[at]archlinux.com.ve>
# Contributor: Douglas Soares de Andrade <dsa@aur.archlinux.org>

pkgname=python-matplotlib
pkgver=3.7.1
pkgrel=4
pkgdesc="A python plotting library, making publication quality plots"
arch=('x86_64' 'arm64')
url="https://matplotlib.org"
license=(custom)
depends=(freetype2 python-contourpy python-cycler python-dateutil python-fonttools python-kiwisolver python-numpy
         python-packaging python-pillow python-pyparsing qhull)
optdepends=('tk: Tk{Agg,Cairo} backends'
            'pyside2: alternative for Qt5{Agg,Cairo} backends'
            'pyside6: alternative for Qt6{Agg,Cairo} backends'
            'python-pyqt5: Qt5{Agg,Cairo} backends'
            'python-pyqt6: Qt6{Agg,Cairo} backends'
            'python-gobject: for GTK{3,4}{Agg,Cairo} backend'
            'python-wxpython: WX{Agg,Cairo} backend'
            'python-cairo: {GTK{3,4},Qt{5,6},Tk,WX}Cairo backends'
            'python-cairocffi: alternative for Cairo backends'
            'python-tornado: WebAgg backend'
            'ffmpeg: for saving movies'
            'imagemagick: for saving animated gifs'
            'ghostscript: usetex dependencies'
            'texlive-bin: usetex dependencies'
            'texlive-latexextra: usetex usage with pdflatex'
            'python-certifi: https support')
makedepends=(git python-build python-installer python-certifi python-setuptools-scm pybind11 python-wheel)
checkdepends=(python-pytest python-pytest-xdist python-pytest-runner python-pytest-rerunfailures
              texlive-bin texlive-core texlive-latexextra texlive-pictures
              ghostscript inkscape ffmpeg imagemagick
              python-cairo python-cairocffi python-gobject python-pyqt5 pyside2
              python-tornado python-wxpython tk
              jupyter-nbconvert jupyter-nbformat python-ipykernel
              python-pandas python-pikepdf python-pytz python-xarray) # todo: maybe qt6? python-pyqt6 pyside6
_tag=8dcbd965f3008b6dc324f4a45b65ff580e55090e # git rev-parse v${pkgver}
_ftver=2.12.1
source=(git+https://github.com/matplotlib/matplotlib.git#tag=${_tag}?signed
        https://github.com/QuLogic/mpl-images/archive/v${pkgver}-with-freetype-${_ftver}/mpl-images-${pkgver}-ft${_ftver}.tar.gz
        freetype.patch
        matplotlib-fix-pgf-tests.patch::https://github.com/matplotlib/matplotlib/pull/25068.patch
        less-strict-image-tests.patch)
b2sums=('SKIP'
        'bcbf789be86c399e7bf08b8647622c4b97e905da7e58a41f5fce9cfdf3941aadf3cf5cb9bb8a417c5640c7e2d5409abffa63fe5a6e68a4b543caf0855acf25e9'
        '54137b06f49d75120737297f4c3f160cd85edb4e5ab971750b33466fac28cf95b0e5a3f20ef27c4c7e7d44b9084bd577f33871f3c94b2ae5d83d61a3d60fb14b'
        'fcbc1a8a73f37549fd0f9d62b6312f51d3c00ce64f325498b997977db2ce1f57d2edd7b94fca78849c0a0677bc14fa424bbb5e0ef1556e8a0626d8756191f7ad'
        '250e330d20986bf7d09b9b87c546a835c2aa4a2c4ec85f50ff69a471a1a870df3b9b90655863195413bc0cd43bd107c3203b5404b8f6ba0c0ffdb99726dae56f')
validpgpkeys=(23CAB59E3332F94D26BEF0378D86E7FAE5EB0C10) # Elliott Sales de Andrade <quantum.analyst@gmail.com>

prepare() {
  cd matplotlib
  # Fix SCM detected version
  rm -r .git
  # Don't require oldest-supported-numpy
  sed -e 's|oldest-supported-numpy|numpy|' -i pyproject.toml
  # Use system freetype and qhull
  sed -e 's|#system_freetype = False|system_freetype = True|' -e 's|#system_qhull = False|system_qhull = True|' mplsetup.cfg.template > mplsetup.cfg
  patch -p1 < ../freetype.patch # From Fedora/upstream
  sed -e 's|2_000_000|2_500_000|' -i lib/matplotlib/tests/test_backends_interactive.py
  # Install tests for check()
  sed -i 's|#tests = False|tests = True|' mplsetup.cfg
  # Use appropriate baseline images for tests
  for _module in matplotlib mpl_toolkits
  do
    cp -r ../mpl-images-${pkgver}-with-freetype-${_ftver}/lib/${_module}/* lib/${_module}
  done
  git apply ../matplotlib-fix-pgf-tests.patch

  patch -Np1 -i ../less-strict-image-tests.patch

  # now fix the arch bullshit
  sed -i.bak -e "s/('aarch64', 'ppc64le', 's390x')/('aarch64', 'arm64', 'ppc64le', 's390x')/g" lib/matplotlib/tests/*.py
}

build() {
  cd matplotlib
  export SETUPTOOLS_SCM_PRETEND_VERSION=${pkgver}
  python -m build --wheel --no-isolation
}

check() {
  cd matplotlib
  [ ! -e test-env ] || rm -r test-env

  export SETUPTOOLS_SCM_PRETEND_VERSION=${pkgver}
  python -m venv --system-site-packages test-env
  test-env/bin/python -m installer dist/*.whl
  # test_ipynb: https://github.com/matplotlib/matplotlib/issues/21654 fixed but `ModuleNotFoundError: No module named 'matplotlib'`
  # test_compressed1: https://github.com/QuLogic/mpl-images/issues/4
  XDG_RUNTIME_DIR=/tmp/runtime-build \
    test-env/bin/python -m pytest -ra -n auto --color=yes --pyargs matplotlib mpl_toolkits.{axes_grid1,axisartist,mplot3d} \
      --deselect 'test-env/lib/python3.11/site-packages/matplotlib/tests/test_backends_interactive.py::test_figure_leak_20490' \
      --deselect 'test-env/lib/python3.11/site-packages/matplotlib/tests/test_legend.py::test_figure_legend_outside' \
      --deselect 'test-env/lib/python3.11/site-packages/matplotlib/tests/test_pickle.py::test_pickle_load_from_subprocess[png]' \
      --deselect 'test-env/lib/python3.11/site-packages/matplotlib/tests/test_backends_interactive.py::test_webagg'
}

package() {
  cd matplotlib
  export SETUPTOOLS_SCM_PRETEND_VERSION=${pkgver}
  python -m installer --destdir="${pkgdir}" dist/*.whl
  install -Dm644 doc/users/project/license.rst -t "${pkgdir}"/${pacman_root}/usr/share/licenses/${pkgname}/
  # Remove tests
  rm -r "${pkgdir}"$(python -c "import site; print(site.getsitepackages()[0])")/{matplotlib,mpl_toolkits/*}/tests/
}
