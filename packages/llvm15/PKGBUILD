# Maintainer: Evangelos Foutras <evangelos@foutrelis.com>
# Contributor: Jan "heftig" Steffens <jan.steffens@gmail.com>

pkgname='llvm15'
pkgver=15.0.7
pkgrel=1
pkgrel+=".12"
arch=('x86_64' 'arm64')
url="https://llvm.org/"
license=('custom:Apache 2.0 with LLVM Exception')
makedepends=('cmake' 'ninja' 'zlib' 'zstd' 'libffi' 'libedit' 'ncurses'
             'libxml2' 'python')
options=('staticlibs' '!lto') # https://github.com/llvm/llvm-project/issues/57740
provides=('llvm15' 'llvm15-libs')

_source_base=https://github.com/llvm/llvm-project/releases/download/llvmorg-$pkgver
source=($_source_base/llvm-$pkgver.src.tar.xz{,.sig}
        $_source_base/cmake-$pkgver.src.tar.xz{,.sig})
sha256sums=('4ad8b2cc8003c86d0078d15d987d84e3a739f24aae9033865c027abae93ee7a4'
            'SKIP'
            '8986f29b634fdaa9862eedda78513969fe9788301c9f2d938f4c10a3e7a3e7ea'
            'SKIP')
validpgpkeys=('474E22316ABF4785A88C6E8EA2C794A986419D8A') # Tom Stellard <tstellar@redhat.com>

_llvm_major=$(echo ${pkgver} | grep -Eo '[0-9]+' | head -1)

prepare() {
  [ -d cmake ] && rm -r cmake

  mv -f cmake{-$pkgver.src,}
  cd llvm-$pkgver.src
  mkdir -p build
}

build() {
  cd llvm-$pkgver.src/build

  # Build only minimal debug info to reduce size
  CFLAGS=${CFLAGS/-g /-g1 }
  CXXFLAGS=${CXXFLAGS/-g /-g1 }

  local cmake_args=(
    -G Ninja
    -DCMAKE_BUILD_TYPE=Release
    -DCMAKE_INSTALL_PREFIX=${pacman_root}/usr/lib/llvm${_llvm_major}
    -DCMAKE_INSTALL_NAME_DIR=${pacman_root}/usr/lib/llvm${_llvm_major}
    -DLLVM_TARGETS_TO_BUILD="all"
    -DLLVM_PARALLEL_LINK_JOBS=1
    -DLLVM_BUILD_LLVM_DYLIB=ON
    -DLLVM_BUILD_TESTS=ON
    -DLLVM_ENABLE_BINDINGS=OFF
    -DLLVM_ENABLE_FFI=ON
    -DLLVM_ENABLE_RTTI=ON
    -DLLVM_INCLUDE_BENCHMARKS=OFF
    -DLLVM_INSTALL_UTILS=ON
    -DLLVM_LINK_LLVM_DYLIB=ON
    -DDEFAULT_SYSROOT=$(xcrun --show-sdk-path)
  )

  cmake .. "${cmake_args[@]}"
  ninja
}

check() {
  # tests fail but most of them pass so who cares right?
  cd llvm-$pkgver.src/build

  DYLD_FALLBACK_LIBRARY_PATH=$PWD/lib ninja -k0 check || :
}

package() {
  cd $srcdir/llvm-$pkgver.src
  DESTDIR="${pkgdir}" ninja -C build install

  # install versioned binary symlinks to /usr/bin/
  install -d "$pkgdir/${pacman_root}/usr/bin"
  local _binary
  for _binary in "$pkgdir"/${pacman_root}/usr/lib/llvm${_llvm_major}/bin/*; do
    local _basename=${_binary##*/}
    ln -s ../lib/llvm${_llvm_major}/bin/$_basename "$pkgdir/${pacman_root}/usr/bin/${_basename}-${_llvm_major}"
  done

  # symlink versioned dylibs
  ln -s ${pacman_root}/usr/lib/llvm${_llvm_major}/libLLVM.dylib ${pkgdir}/${pacman_root}/usr/lib/libLLVM-${_llvm_major}.dylib
  ln -s ${pacman_root}/usr/lib/llvm${_llvm_major}/libLLVM.dylib ${pkgdir}/${pacman_root}/usr/lib/libLLVM-${pkgver}.dylib

  fix_rpath_v2 $(find ${pkgdir}/${pacman_root}/usr/lib/llvm${_llvm_major} -iname '*.dylib')
  fix_rpath_v2 $(find ${pkgdir}/${pacman_root}/usr/lib/llvm${_llvm_major}/bin/ -type f)

  install -Dm644 LICENSE.TXT "$pkgdir/${pacman_root}/usr/share/licenses/$pkgname/LICENSE"
}

