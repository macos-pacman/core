# Maintainer: Lukas Fleischer <lfleischer@archlinux.org>
# Contributor: David Runge <dvzrv@archlinux.org>
# Contributor: Aleksey Filippov <sarum9in@gmail.com>
# Contributor: Bart≈Çomiej Piotrowski <bpiotrowski@archlinux.org>
# Contributor: Sven-Hendrik Haase <sh@lutzhaase.com>
# Contributor: Thomas S Hatch <thatch45@gmail.com>
# Contributor: Geoffroy Carrier <geoffroy@archlinux.org>
# Contributor: Daniel J Griffiths <ghost1227@archlinux.us>

pkgbase='protobuf'
pkgname=('protobuf' 'python-protobuf')
pkgver=23.2
pkgrel=1
pkgdesc="Protocol Buffers - Google's data interchange format"
arch=('x86_64' 'arm64')
url='https://developers.google.com/protocol-buffers/'
license=('BSD')
depends=(
  'abseil-cpp'
  'gcc-libs'
  'glibc'
  'zlib'
)
makedepends=(
  'cmake'
  'gtest'
  'python-build'
  'python-installer'
  'python-setuptools'
  'python-wheel'
)
checkdepends=(
  python-pytest
)
source=(https://github.com/protocolbuffers/protobuf/archive/v$pkgver/$pkgname-$pkgver.tar.gz
        $pkgbase-21.12-pep517.patch  # let's not call setup.py like a script and just build...
)
sha512sums=('2bff54f80bcf5eac015d6eca5a57a96ced4dbc3f5c05ab1095b95c73fb44b06f98f74f1b235ecea5ed7ee45a8702fff9771c83d6e8a2bdfe012a84f0a93d2b26'
            'a297e74ee4f807b3fad7da7d0de6dd9647963521be66cd2a2370343f5bd191cbb38759157ac0cdb161a5893a30a10520a5098e88a292c800859af33db5cf7a41')

prepare() {
  patch -Np1 -d $pkgbase-$pkgver -i ../$pkgname-21.12-pep517.patch

  sed -i.bak -e 's/-std=c++14/-std=c++17/g' protobuf-23.2/python/setup.py
}

build() {
  local cmake_options=(
    -B build
    -D CMAKE_BUILD_TYPE=Release
    -D CMAKE_INSTALL_PREFIX=${pacman_root}/usr
    -D CMAKE_PREFIX_PATH=${pacman_root}/usr
    -D CMAKE_CXX_STANDARD=17
    -D protobuf_BUILD_SHARED_LIBS=ON
    -D protobuf_USE_EXTERNAL_GTEST=ON
    -D protobuf_ABSL_PROVIDER=package
    -S $pkgbase-$pkgver
    -W no-dev
  )

  cmake "${cmake_options[@]}"
  cmake --build build --verbose

  ln -sf ${srcdir}/build $pkgbase-$pkgver/src/.libs
  cd $pkgbase-$pkgver/python

  PROTOC="$srcdir"/build/protoc \
    python -m build --wheel --no-isolation
}

check() {
  cmake --build build --target test

  cd $pkgbase-$pkgver/python

  # python tests broken
  export PYTHONPATH=build/$(_GetPythonPlatformPath)
  # pytest -v google/$pkgbase/internal/
}

package_protobuf() {
  replaces=('protobuf-cpp')
  provides=('libprotoc.dylib' 'libprotobuf.dylib' 'libprotobuf-lite.dylib')

  DESTDIR="$pkgdir" cmake --install build

  cd $pkgbase-$pkgver
  install -vDm 644 LICENSE -t "$pkgdir/${pacman_root}/usr/share/licenses/$pkgname"
  install -vDm 644 editors/protobuf-mode.el \
    -t "$pkgdir/${pacman_root}/usr/share/emacs/site-lisp/"
  install -vDm 644 editors/proto.vim \
    -t "${pkgdir}/${pacman_root}/usr/share/vim/vimfiles/syntax"
}

package_python-protobuf() {
  pkgdesc='Python 3 bindings for Google Protocol Buffers'
  depends=(
    "protobuf=$pkgver"
    'python'
  )

  python -m installer --destdir="$pkgdir" $pkgbase-$pkgver/python/dist/*.whl
  install -vDm 644 $pkgbase-$pkgver/LICENSE -t "$pkgdir/${pacman_root}/usr/share/licenses/$pkgname/"

  # note: we will complain about broken dylibs, but it's ok because the dylib
  # is actually in the `protobuf` package, which we depend on.
  local _site=$(python -c 'import site; print(site.getsitepackages()[0])')
  fix_rpath ${pkgdir}/${_site}/google/protobuf/pyext/_message.cpython-*-darwin.so
}




