# Maintainer: Evangelos Foutras <evangelos@foutrelis.com>
# Contributor: Jan "heftig" Steffens <jan.steffens@gmail.com>

pkgname=llvm14
pkgver=14.0.6
pkgrel=3
arch=('x86_64' 'arm64')
url="https://llvm.org/"
license=('custom:Apache 2.0 with LLVM Exception')
makedepends=('cmake' 'ninja' 'libffi' 'libedit' 'ncurses' 'libxml2'
             'python' 'gnu-coreutils')
checkdepends=('python-psutil')
options=('staticlibs' '!lto') # Getting thousands of test failures with LTO
_source_base=https://github.com/llvm/llvm-project/releases/download/llvmorg-$pkgver
source=($_source_base/llvm-$pkgver.src.tar.xz{,.sig}
        llvm-coroutines-ubsan.patch)
sha256sums=('050922ecaaca5781fdf6631ea92bc715183f202f9d2f15147226f023414f619a'
            'SKIP'
            'ee9baf6df05474083857044d92f26f59d3ee709cdf82ba3bdb2792e6645f71d9')
validpgpkeys=('474E22316ABF4785A88C6E8EA2C794A986419D8A') # Tom Stellard <tstellar@redhat.com>

# Utilizing LLVM_DISTRIBUTION_COMPONENTS to avoid
# installing static libraries; inspired by Gentoo
_get_distribution_components() {
  local target
  ninja -t targets | grep -Po 'install-\K.*(?=-stripped:)' | while read -r target; do
    case $target in
      llvm-libraries|distribution)
        continue
        ;;
      # shared libraries (but not gold)
      LLVM)
        ;;
      # libraries needed for clang-tblgen
      LLVMDemangle|LLVMSupport|LLVMTableGen)
        ;;
      # exclude static libraries
      LLVM*)
        continue
        ;;
      # exclude llvm-exegesis (doesn't seem useful without libpfm)
      llvm-exegesis)
        continue
        ;;
    esac
    echo $target
  done
}

prepare() {
  cd llvm-$pkgver.src
  mkdir -p build

  # https://github.com/llvm/llvm-project/issues/49689
  patch -Np2 -i ../llvm-coroutines-ubsan.patch
}

build() {
  cd llvm-$pkgver.src/build

  # Build only minimal debug info to reduce size
  CFLAGS+=' -g0'
  CXXFLAGS+=' -g0'

  local cmake_args=(
    -G Ninja
    -DCMAKE_BUILD_TYPE=Release
    -DCMAKE_INSTALL_PREFIX=${pacman_root}/usr/lib/llvm14
    -DCMAKE_SKIP_RPATH=OFF
    -DLLVM_BUILD_LLVM_DYLIB=ON
    -DLLVM_BUILD_TESTS=ON
    -DLLVM_ENABLE_BINDINGS=OFF
    -DLLVM_ENABLE_FFI=ON
    -DLLVM_ENABLE_RTTI=ON
    -DLLVM_INCLUDE_BENCHMARKS=OFF
    -DLLVM_INSTALL_UTILS=ON
    -DLLVM_LINK_LLVM_DYLIB=ON
  )

  cmake .. "${cmake_args[@]}"
  local distribution_components=$(_get_distribution_components | gpaste -sd\;)
  test -n "$distribution_components"
  cmake_args+=(-DLLVM_DISTRIBUTION_COMPONENTS="$distribution_components")

  cmake .. "${cmake_args[@]}"
  ninja
}

check() {
  cd llvm-$pkgver.src/build
  DYLD_FALLBACK_LIBRARY_PATH=$PWD/lib ninja check
}

package() {
  pkgdesc="Compiler infrastructure and runtime libraries (LLVM 14)"
  depends=('gcc-libs' 'zlib' 'libffi' 'libedit' 'ncurses' 'libxml2' 'perl')
  provides=('llvm14-libs')

  cd llvm-$pkgver.src/build

  DESTDIR="$pkgdir" ninja install-distribution

  install -d "$pkgdir/${pacman_root}/usr/lib/llvm14/lib"

  ln -s ${pacman_root}/usr/lib/llvm14/lib/libLLVM.dylib "$pkgdir/${pacman_root}/usr/lib/libLLVM-14.dylib"
  ln -s ${pacman_root}/usr/lib/llvm14/lib/libLLVM.dylib "$pkgdir/${pacman_root}/usr/lib/libLLVM-${pkgver}.dylib"

  ln -s libLLVM.dylib "$pkgdir/${pacman_root}/usr/lib/llvm14/lib/libLLVM-14.dylib"
  ln -s libLLVM.dylib "$pkgdir/${pacman_root}/usr/lib/llvm14/lib/libLLVM-$pkgver.dylib"

  # Create versioned symlinks from /usr/bin/ to /usr/lib/llvm14/bin/
  install -d "$pkgdir/${pacman_root}/usr/bin"
  local _binary
  for _binary in "$pkgdir"/${pacman_root}/usr/lib/llvm14/bin/*; do
    local _basename=${_binary##*/}
    ln -s ../lib/llvm14/bin/$_basename "$pkgdir/${pacman_root}/usr/bin/${_basename}-14"
  done

  install -Dm644 ../LICENSE.TXT "$pkgdir/${pacman_root}/usr/share/licenses/$pkgname/LICENSE"

  local _f; for _f in ${pkgdir}/${pacman_root}/usr/bin/* ${pkgdir}/${pacman_root}/usr/lib/llvm14/lib/*.dylib; do
    fix_rpath "${_f}"
  done
}

# vim:set ts=2 sw=2 et:
