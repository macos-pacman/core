diff --git a/scripts/libmakepkg/executable/fakeroot.sh.in b/scripts/libmakepkg/executable/fakeroot.sh.in
index 61329fe8..0183e229 100644
--- a/scripts/libmakepkg/executable/fakeroot.sh.in
+++ b/scripts/libmakepkg/executable/fakeroot.sh.in
@@ -28,10 +28,5 @@ source "$LIBRARY/util/message.sh"
 executable_functions+=('executable_fakeroot')
 
 executable_fakeroot() {
-	if (( SOURCEONLY || BUILDPKG )); then
-		if ! type -p fakeroot >/dev/null; then
-			error "$(gettext "Cannot find the %s binary.")" "fakeroot"
-			return 1
-		fi
-	fi
+	return 0
 }
diff --git a/scripts/makepkg.sh.in b/scripts/makepkg.sh.in
index e58edfa1..85437007 100644
--- a/scripts/makepkg.sh.in
+++ b/scripts/makepkg.sh.in
@@ -180,8 +180,8 @@ clean_up() {
 }
 
 enter_fakeroot() {
-	msg "$(gettext "Entering %s environment...")" "fakeroot"
-	fakeroot -- bash -$- "${BASH_SOURCE[0]}" -F "${ARGLIST[@]}" || exit $?
+	msg "$(gettext "Entering %s environment...")" "bash"
+	bash -$- "${BASH_SOURCE[0]}" -F "${ARGLIST[@]}" || exit $?
 }
 
 # Automatically update pkgver variable if a pkgver() function is provided
@@ -597,7 +597,6 @@ write_pkginfo() {
 	merge_arch_attrs
 
 	printf "# Generated by makepkg %s\n" "$makepkg_version"
-	printf "# using %s\n" "$(fakeroot -v)"
 
 	write_kv_pair "pkgname" "$pkgname"
 	write_kv_pair "pkgbase" "$pkgbase"
@@ -1186,17 +1185,10 @@ if (( LOGGING )) && ! ensure_writable_dir "LOGDEST" "$LOGDEST"; then
 	exit $E_FS_PERMISSIONS
 fi
 
-if (( ! INFAKEROOT )); then
-	if (( EUID == 0 )); then
-		error "$(gettext "Running %s as root is not allowed as it can cause permanent,\n\
+if (( EUID == 0 )); then
+	error "$(gettext "Running %s as root is not allowed as it can cause permanent,\n\
 catastrophic damage to your system.")" "makepkg"
-		exit $E_ROOT
-	fi
-else
-	if [[ -z $FAKEROOTKEY ]]; then
-		error "$(gettext "Do not use the %s option. This option is only for internal use by %s.")" "'-F'" "makepkg"
-		exit $E_INVALID_OPTION
-	fi
+	exit $E_ROOT
 fi
 
 unset pkgname "${pkgbuild_schema_strings[@]}" "${pkgbuild_schema_arrays[@]}"

diff --git a/src/pacman/pacman.c b/src/pacman/pacman.c
index e398855a..45cf0341 100644
--- a/src/pacman/pacman.c
+++ b/src/pacman/pacman.c
@@ -1086,7 +1086,6 @@ static void cl_to_log(int argc, char *argv[])
 int main(int argc, char *argv[])
 {
 	int ret = 0;
-	uid_t myuid = getuid();
 
 	console_cursor_hide();
 	install_segv_handler();
@@ -1130,12 +1129,6 @@ int main(int argc, char *argv[])
 		cleanup(ret);
 	}
 
-	/* check if we have sufficient permission for the requested operation */
-	if(myuid > 0 && needs_root()) {
-		pm_printf(ALPM_LOG_ERROR, _("you cannot perform this operation unless you are root.\n"));
-		cleanup(EXIT_FAILURE);
-	}
-
 	/* we support reading targets from stdin if a cmdline parameter is '-' */
 	if(alpm_list_find_str(pm_targets, "-")) {
 		if(!isatty(fileno(stdin))) {
