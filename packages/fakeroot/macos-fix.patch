diff '--color=auto' -ur fakeroot-orig/libfakeroot_inode64.c fakeroot-1.31/libfakeroot_inode64.c
--- fakeroot-orig/libfakeroot_inode64.c	2023-05-03 13:24:47.189089547 +0800
+++ fakeroot-1.31/libfakeroot_inode64.c	2023-05-03 14:56:35.900953444 +0800
@@ -13,6 +13,7 @@
 
 */
 
+#if 0
 #ifdef __APPLE__
 /*
    This file is for symbols which have the "$INODE64" version, i.e. symbols
@@ -144,3 +145,4 @@
 #endif /* MAC_OS_X_VERSION_MIN_REQUIRED >= MAC_OS_X_VERSION_10_5 */
 #endif /* HAVE_FTS_READ */
 #endif /* ifdef __APPLE__ */
+#endif
diff '--color=auto' -ur fakeroot-orig/libfakeroot_unix2003.c fakeroot-1.31/libfakeroot_unix2003.c
--- fakeroot-orig/libfakeroot_unix2003.c	2023-05-03 13:24:47.175000080 +0800
+++ fakeroot-1.31/libfakeroot_unix2003.c	2023-05-03 14:56:45.339368557 +0800
@@ -12,7 +12,7 @@
     GNU General Public License for more details.
 
 */
-
+#if 0
 #if defined __APPLE__ && !defined __LP64__
 /*
    In this file, we want 'struct stat' to have a 32-bit 'ino_t'.
@@ -242,3 +242,4 @@
 }
 #endif /* MAC_OS_X_VERSION_MIN_REQUIRED >= MAC_OS_X_VERSION_10_5 */
 #endif /* if defined __APPLE__ && !defined __LP64__ */
+#endif
diff '--color=auto' -ur fakeroot-orig/wrapfunc.inp fakeroot-1.31/wrapfunc.inp
--- fakeroot-orig/wrapfunc.inp	2023-05-03 13:24:47.173814451 +0800
+++ fakeroot-1.31/wrapfunc.inp	2023-05-03 14:54:21.754897591 +0800
@@ -46,13 +46,9 @@
 fgetattrlist;int;(int fd, void *attrList, void *attrBuf, size_t attrBufSize, unsigned long options);(fd, attrList, attrBuf, attrBufSize, options)
 #endif
 #if MAC_OS_X_VERSION_MIN_REQUIRED >= MAC_OS_X_VERSION_10_5
-getattrlist$UNIX2003;int;(const char *path, void *attrList, void *attrBuf, size_t attrBufSize, unsigned long options);(path, attrList, attrBuf, attrBufSize, options)
 #endif
 #endif
 #if MAC_OS_X_VERSION_MIN_REQUIRED >= MAC_OS_X_VERSION_10_5
-lstat$INODE64;int;(const char *file_name, struct stat *buf);(file_name, buf)
-stat$INODE64;int;(const char *file_name, struct stat *buf);(file_name, buf)
-fstat$INODE64;int;(int fd, struct stat *buf);(fd, buf)
 posix_spawn;int;(pid_t * __restrict pid, const char * __restrict path, const posix_spawn_file_actions_t *file_actions, const posix_spawnattr_t * __restrict attrp, char *const argv[ __restrict], char *const envp[ __restrict]);(pid, path, file_actions, attrp, argv, envp)
 posix_spawnp;int;(pid_t * __restrict pid, const char * __restrict path, const posix_spawn_file_actions_t *file_actions, const posix_spawnattr_t * __restrict attrp, char *const argv[ __restrict], char *const envp[ __restrict]);(pid, path, file_actions, attrp, argv, envp)
 #endif
@@ -89,9 +85,6 @@
 #endif
 #if defined __APPLE__ && !defined __LP64__
 #if MAC_OS_X_VERSION_MIN_REQUIRED >= MAC_OS_X_VERSION_10_5
-lchown$UNIX2003;int;(const char *path, uid_t owner, gid_t group);(path, owner, group)
-chmod$UNIX2003;int;(const char *path, mode_t mode);(path, mode)
-fchmod$UNIX2003;int;(int fd, mode_t mode);(fd, mode)
 #endif
 #endif /* if defined __APPLE__ && !defined __LP64__ */
 mkdir;int;(const char *path, mode_t mode);(path, mode)
@@ -123,8 +116,6 @@
 setregid;int;(SETREGID_ARG rgid, SETREGID_ARG egid);(rgid, egid)
 #if defined __APPLE__ && !defined __LP64__
 #if MAC_OS_X_VERSION_MIN_REQUIRED >= MAC_OS_X_VERSION_10_5
-setreuid$UNIX2003;int;(SETREUID_ARG ruid, SETREUID_ARG euid);(ruid, euid)
-setregid$UNIX2003;int;(SETREGID_ARG rgid, SETREGID_ARG egid);(rgid, egid)
 #endif
 #endif /* if defined __APPLE__ && !defined __LP64__ */
 #ifdef HAVE_GETRESUID
@@ -235,7 +226,6 @@
 fts_read;FTSENT *;(FTS *ftsp);(ftsp)
 #ifdef __APPLE__
 #if MAC_OS_X_VERSION_MIN_REQUIRED >= MAC_OS_X_VERSION_10_5
-fts_read$INODE64;FTSENT *;(FTS *ftsp);(ftsp)
 #endif
 #endif /* ifdef __APPLE__ */
 #endif /* HAVE_FTS_READ */
@@ -243,7 +233,6 @@
 fts_children;FTSENT *;(FTS *ftsp, int options);(ftsp, options)
 #ifdef __APPLE__
 #if MAC_OS_X_VERSION_MIN_REQUIRED >= MAC_OS_X_VERSION_10_5
-fts_children$INODE64;FTSENT *;(FTS *ftsp, int options);(ftsp, options)
 #endif
 #endif /* ifdef __APPLE__ */
 #endif /* HAVE_FTS_CHILDREN */
--- a/scripts/fakeroot.in	2023-05-04 23:16:43.581959044 +0800
+++ b/scripts/fakeroot.in	2023-05-04 23:17:02.889122729 +0800
@@ -168,8 +168,8 @@
 export FAKEROOT_FD_BASE
 
 if test -z "$*"; then
-  @MACOSX_FALSE@FAKEROOTKEY=$FAKEROOTKEY @LDLIBPATHVAR@="$PATHS" @LDEXTRAVAR@ @LDPRELOADVAR@="$FAKEROOT_LIB" ${SHELL:-/bin/sh}
-  @MACOSX_TRUE@FAKEROOTKEY=$FAKEROOTKEY @LDEXTRAVAR@ @LDPRELOADVAR@="$FAKEROOT_LIB" ${SHELL:-/bin/sh}
+  @MACOSX_FALSE@FAKEROOTKEY=$FAKEROOTKEY @LDLIBPATHVAR@="$PATHS" @LDEXTRAVAR@ @LDPRELOADVAR@="$FAKEROOT_LIB" ${SHELL:@SHELL@}
+  @MACOSX_TRUE@FAKEROOTKEY=$FAKEROOTKEY @LDEXTRAVAR@ @LDPRELOADVAR@="$FAKEROOT_LIB" ${SHELL:@SHELL@}
   RESULT=$?
 else
   @MACOSX_FALSE@FAKEROOTKEY=$FAKEROOTKEY @LDLIBPATHVAR@="$PATHS" @LDEXTRAVAR@ @LDPRELOADVAR@="$FAKEROOT_LIB" "$@"
