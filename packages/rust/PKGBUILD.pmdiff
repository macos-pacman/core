--- PKGBUILD
+++ PKGBUILD
@@ -6,0 +7,5 @@
+# note: we just let the rust bootstrap script download the compiler;
+# it seems like whatever we install with rustup manually can't compile shit
+# it also lets us not have rust depend on rust, which is kinda dumb.
+
+
@@ -8,8 +13 @@
-pkgname=(
-  rust
-  lib32-rust-libs
-  rust-musl
-  rust-wasm
-  rust-src
-)
-epoch=1
+pkgname=(rust rust-wasm rust-src)
@@ -20,2 +18,2 @@
-arch=(x86_64)
-license=("Apache-2.0 OR MIT")
+arch=('x86_64' 'arm64')
+license=(MIT Apache)
@@ -22,0 +21 @@
+  !debug
@@ -24,0 +24 @@
+  !strip
@@ -28 +27,0 @@
-  gcc
@@ -35 +33,0 @@
-  lib32-gcc-libs
@@ -39 +36,0 @@
-  musl
@@ -43 +39,0 @@
-  rust
@@ -45,4 +40,0 @@
-)
-checkdepends=(
-  gdb
-  procps-ng
@@ -51,0 +44 @@
+  0001-cargo-Change-libexec-dir.patch
@@ -54,4 +47,5 @@
-  0003-compiler-Change-LLVM-targets.patch
-  0004-compiler-Use-wasm-ld-for-wasm-targets.patch
-)
-b2sums=('cf9fd96580d2c696e8d2992a5b4ee285824648bfa721212dd7691d63c876cf8fda1d50e924bec891af2c721e3746c4227fd23a0bed48e0b505fcd328936f5a35'
+  0002-compiler-Change-LLVM-targets.patch
+  0003-compiler-Use-wasm-ld-for-wasm-targets.patch
+  disable-time-machine-fuckery.patch
+)
+b2sums=('cb0b20523154da26ce2e8cd2e214c3e3c62a66dcf15f1615c92c2efcf3cfc2a437e8b7d582f05cc123e0450ae924aef9c28884b2579c589f9e4336f6bc1b6e70'
@@ -59,7 +53,12 @@
-        'd3ed7043e288c78ac4007b267448457db0972905037754b67249d81be0889f47c4d93573c24d730907c31ec44e80ce696fbf50f98521eadee92c003d2324a1a3'
-        '6afaf5bff729618aa35d84f20b1447694c887b84a406f55344864b9e8dce72f80467412c128b5309d5b962b605ca396b77a52f275dd35681ab50cbedc68f873a'
-        '18ca47c350373d9a095aff9a658c61816a542bb391a2a8ddf582f25795a21e9fc344b3e71a2eed7b094610bb61d9658e5360ef2ace9441fd21e4193746d45be7'
-        '23f399d5ea776df5dba1ec42a96020a7ae3b18f5a83121d90ca0256a90027529135bac751373a31480860c0dbad30598833a7da43d1e7f25ce5b6d5d945ce550')
-validpgpkeys=(
-  108F66205EAEB0AAA8DD5E1C85AB96E6FA1BE5FE  # Rust Language (Tag and Release Signing Key) <rust-key@rust-lang.org>
-)
+        'c4bf40d48fd7ccb02c73fc02d5d968cfda80d1fd85c1ade4781d174bb4cb165b52998af4bf9495f2c04b0a25b147c13a5f3de4281d621353c9e799a67297a3fe'
+        '9752dc3b5fc2248c8bec4efbb3d927088d48d9416229d545a05180374549a0dda6e9d6d9a8d0a3b03437f2e3c54f9c153aab3281d46411f4c81559033b8fb04a'
+        'fdf2159315b96337da84b45fc49b55ea73d6d14710f3967710da4fcee6d049ef9e5bb18e438e604750f4a3af9c909e58eea143f4a3c497acb7d806f834fd3b44'
+        '66c5cf262c4b865cdcc238d88aad4aa46e0861de0b4e20b5e86f7f1c312f7a40df0f9477fbc494949a99f51e9eb93537c072270e9bd20dfa79eb5cbe0d850e0f'
+        '9f3f911088a22101f8966dc16a1ecc65da5facaad5c169d9464e721aa452dd45968d359a5b35ae74ff23bd98d44c60cb04c0b8bc89e10fb99549c1670371c902'
+        '6ea472d7d8afd0688dac305decb818b3779277b87058cb8f9207adc01881e7b51474f8c52fc4c21247060ede2614a54183446b0290987db02bb83a0233149b06')
+validpgpkeys=(108F66205EAEB0AAA8DD5E1C85AB96E6FA1BE5FE  # Rust Language (Tag and Release Signing Key) <rust-key@rust-lang.org>
+              474E22316ABF4785A88C6E8EA2C794A986419D8A) # Tom Stellard <tstellar@redhat.com>
+
+_arch1=$(clang -print-target-triple)
+_arch2=${_arch1%%.*}
+_arch=$(echo ${_arch2} | grep -o '.*[^0-9]' | sed -e 's/arm64/aarch64/')
@@ -70,2 +69,4 @@
-  # Patch bootstrap so that rust-analyzer-proc-macro-srv
-  # is in /usr/lib instead of /usr/libexec
+  # Patch bootstrap and cargo so credential helpers
+  # are in /usr/lib instead of /usr/libexec
+  patch -d src/tools/cargo -Np1 < ../0001-cargo-Change-libexec-dir.patch
+
@@ -78 +79 @@
-  patch -Np1 -i ../0003-compiler-Change-LLVM-targets.patch
+  patch -Np1 -i ../0002-compiler-Change-LLVM-targets.patch
@@ -81 +82,4 @@
-  patch -Np1 -i ../0004-compiler-Use-wasm-ld-for-wasm-targets.patch
+  patch -Np1 -i ../0003-compiler-Use-wasm-ld-for-wasm-targets.patch
+
+  # disable time machine fuckery
+  patch -Np1 -i ../disable-time-machine-fuckery.patch
@@ -83,0 +88 @@
+changelog-seen = 2
@@ -85 +89,0 @@
-change-id = 118703
@@ -91,10 +95,2 @@
-target = [
-  "x86_64-unknown-linux-gnu",
-  "i686-unknown-linux-gnu",
-  "x86_64-unknown-linux-musl",
-  "wasm32-unknown-unknown",
-  "wasm32-wasi",
-]
-cargo = "/usr/bin/cargo"
-rustc = "/usr/bin/rustc"
-rustfmt = "/usr/bin/rustfmt"
+host = ["${_arch}"]
+target = ["${_arch}", "wasm32-unknown-unknown", "wasm32-wasi"]
@@ -105,0 +102 @@
+  "rustfmt",
@@ -107,2 +103,0 @@
-  "rustfmt",
-  "rust-analyzer-proc-macro-srv",
@@ -111,0 +107 @@
+  "rust-analyzer-proc-macro-srv",
@@ -120 +116,2 @@
-prefix = "/usr"
+prefix = "${pacman_root}/usr"
+sysconfdir = "${pacman_root}/etc"
@@ -123 +120 @@
-debuginfo-level-std = 2
+# debuginfo-level-std = 2
@@ -125,2 +122,4 @@
-description = "Arch Linux $pkgbase $epoch:$pkgver-$pkgrel"
-rpath = false
+description = "(macos-pacman) $pkgname $pkgver-$pkgrel"
+
+# note: we'll fix the rpath after-the-fact
+rpath = true
@@ -127,0 +127 @@
+remap-debuginfo = true
@@ -129,5 +128,0 @@
-
-# Causes "error: --remap-path-prefix must contain '=' between FROM and TO"
-# even after creating the missing ~/.cargo/registry/src dir.
-# https://github.com/rust-lang/rust/issues/117885
-remap-debuginfo = false
@@ -147,16 +142,7 @@
-[target.x86_64-unknown-linux-gnu]
-cc = "/usr/bin/gcc"
-cxx = "/usr/bin/g++"
-ar = "/usr/bin/gcc-ar"
-ranlib = "/usr/bin/gcc-ranlib"
-llvm-config = "/usr/bin/llvm-config"
-
-[target.i686-unknown-linux-gnu]
-cc = "/usr/bin/gcc"
-cxx = "/usr/bin/g++"
-ar = "/usr/bin/gcc-ar"
-ranlib = "/usr/bin/gcc-ranlib"
-
-[target.x86_64-unknown-linux-musl]
-sanitizers = false
-musl-root = "/usr/lib/musl"
+[target.${_arch}]
+cc = "${pacman_root}/usr/bin/clang"
+cxx = "${pacman_root}/usr/bin/clang++"
+ar = "/usr/bin/ar"
+ranlib = "/usr/bin/ranlib"
+llvm-config = "${pacman_root}/usr/bin/llvm-config"
+
@@ -171 +157,2 @@
-wasi-root = "/usr/share/wasi-sysroot"
+wasi-root = "${pacman_root}/usr/share/wasi-sysroot"
+
@@ -180,2 +167,2 @@
-    mv "$f" "$d"
-    rmdir -p --ignore-fail-on-non-empty "$(dirname "$f")"
+    mv -f "$f" "$d"
+    rmdir -p "$(dirname "$f")" || :
@@ -190 +177,2 @@
-  DESTDIR="$srcdir/dest-rust" python ./x.py install -j "$(nproc)"
+  rm -fr "$srcdir/dest-rust"
+  DESTDIR="$srcdir/dest-rust" python ./x.py install -j"$(getconf _NPROCESSORS_ONLN)"
@@ -193,0 +182,3 @@
+  local _root
+  _root=${pacman_root#/}
+
@@ -195,17 +186,9 @@
-  rm usr/bin/*.old
-  rm usr/lib/rustlib/{components,install.log,rust-installer-version,uninstall.sh}
-  rm usr/lib/rustlib/manifest-*
-
-  # rustbuild always installs copies of the shared libraries to /usr/lib,
-  # overwrite them with symlinks to the per-architecture versions
-  mkdir -p usr/lib32
-  ln -srft usr/lib   usr/lib/rustlib/x86_64-unknown-linux-gnu/lib/*.so
-  ln -srft usr/lib32 usr/lib/rustlib/i686-unknown-linux-gnu/lib/*.so
-
-  mkdir -p usr/share/licenses/rust
-  mv -t usr/share/licenses/rust usr/share/doc/rust/{COPYRIGHT,LICENSE*}
-
-  _pick dest-i686 usr/lib/rustlib/i686-unknown-linux-gnu usr/lib32
-  _pick dest-musl usr/lib/rustlib/x86_64-unknown-linux-musl
-  _pick dest-wasm usr/lib/rustlib/wasm32-*
-  _pick dest-src  usr/lib/rustlib/src
+  rm ${_root}/usr/bin/*.old
+  rm ${_root}/usr/lib/rustlib/{components,install.log,rust-installer-version,uninstall.sh}
+  rm ${_root}/usr/lib/rustlib/manifest-*
+
+  mkdir -p ${_root}/usr/share/licenses/rust
+  mv ${_root}/usr/share/doc/rust/{COPYRIGHT,LICENSE*} ${_root}/usr/share/licenses/rust
+
+  _pick dest-wasm ${_root}/usr/lib/rustlib/wasm32-*
+  _pick dest-src  ${_root}/usr/lib/rustlib/src
@@ -236,20 +219,37 @@
-}
-
-package_lib32-rust-libs() {
-  pkgdesc="32-bit target and libraries for Rust"
-  depends=(
-    lib32-gcc-libs
-    rust
-  )
-  provides=(lib32-rust)
-  conflicts=(lib32-rust)
-  replaces=(lib32-rust)
-
-  cp -a dest-i686/* "$pkgdir"
-
-  mkdir -p "$pkgdir/usr/share/licenses"
-  ln -s rust "$pkgdir/usr/share/licenses/$pkgname"
-}
-
-package_rust-musl() {
-  pkgdesc="Musl target for Rust"
+
+  local _root
+  _root=${pacman_root#/}
+
+  pushd $pkgdir > /dev/null
+    # rustbuild always installs copies of the shared libraries to /usr/lib,
+    # overwrite them with symlinks to the per-architecture versions
+    ln -sf ${pacman_root}/usr/lib/rustlib/${_arch}/lib/*.dylib ${_root}/usr/lib
+  popd > /dev/null
+
+  # fix those rpaths
+  msg 'Fixing dylib names'
+  local _lib _libs
+  IFS=$'\n' read -r -d '' -a _libs < <(find ${pkgdir}/${pacman_root}/usr/lib -iname '*.dylib' \
+    -o -iname "rust-analyzer-proc-macro-srv") || true
+
+  for _lib in "${_libs[@]}"; do
+    fix_rpath "${pacman_root}" "${pkgdir}" "${_lib}"
+  done
+
+  local _exe _exes
+  IFS=$'\n' read -r -d '' -a _exes < <(find ${pkgdir}/${pacman_root}/usr/bin -type f) || true
+
+  for _exe in "${_exes[@]}"; do
+    fix_rpath "${pacman_root}" "${pkgdir}" "${_exe}"
+  done
+
+  msg 'Codesigning modified dylibs'
+
+  _libs=("${pkgdir}/${pacman_root}/usr/lib/rustlib/${_arch}/lib/librustc-stable_rt."{tsan,asan,lsan}.dylib)
+  for _lib in "${_libs[@]}"; do
+      codesign --force -s - "${_lib}"
+  done
+}
+
+package_rust-src() {
+  pkgdesc="Source code for the Rust standard library"
@@ -258,4 +258,4 @@
-  cp -a dest-musl/* "$pkgdir"
-
-  mkdir -p "$pkgdir/usr/share/licenses"
-  ln -s rust "$pkgdir/usr/share/licenses/$pkgname"
+  cp -a dest-src/* "$pkgdir"
+
+  mkdir -p "$pkgdir/${pacman_root}/usr/share/licenses"
+  ln -s rust "$pkgdir/${pacman_root}/usr/share/licenses/$pkgname"
@@ -273,12 +273,3 @@
-  mkdir -p "$pkgdir/usr/share/licenses"
-  ln -s rust "$pkgdir/usr/share/licenses/$pkgname"
-}
-
-package_rust-src() {
-  pkgdesc="Source code for the Rust standard library"
-  depends=(rust)
-
-  cp -a dest-src/* "$pkgdir"
-
-  mkdir -p "$pkgdir/usr/share/licenses"
-  ln -s rust "$pkgdir/usr/share/licenses/$pkgname"
+  mkdir -p "$pkgdir/${pacman_root}/usr/share/licenses"
+  ln -s rust "$pkgdir/${pacman_root}/usr/share/licenses/$pkgname"
+
