pkgname=llvm-project15
pkgver=15.0.7
pkgrel=1
pkgrel+=".1"
arch=('x86_64' 'arm64')
license=('Apache')
url='https://llvm.org/'
depends=(python)
makedepends=('cmake' 'ninja' 'zlib' 'zstd' 'libffi' 'libedit' 'ncurses'
             'libxml2' 'python-setuptools')
options=('staticlibs')
provides=(llvm15 llvm-libs15 clang15 libc++15 compiler-rt15)

source=(
  "https://github.com/llvm/llvm-project/releases/download/llvmorg-${pkgver}/llvm-project-${pkgver}.src.tar.xz"
  'libstdcxx-on-macos.patch'
  'sysroot-fix.patch'
  'fix-clangd-paths.patch'
)

sha256sums=(
  '8b5fcb24b4128cf04df1b0b9410ce8b1a729cb3c544e6da885d234280dedeac6'
  '95f3b49c4bf7575b02836d7fd1172dda67bbbf5ed0a5cd1b5cedfccac84a03f6'
  '0346407ec68a1376232d5ad72196cffbcb1d7b547acc688dc9724687b3859dda'
  '5fb05e040360dee14ad152ff6faa536d257b05cd68a949df283419fc0adaae8b'
)

# Utilizing LLVM_DISTRIBUTION_COMPONENTS to avoid
# installing static libraries; inspired by Gentoo
_get_distribution_components() {
  local target
  ninja -t targets | grep -Po 'install-\K.*(?=-stripped:)' | while read -r target; do
    case $target in
      llvm-libraries|clang-libraries|distribution)              # yeet
        continue ;;
      # shared libraries
      LLVM|LLVMDemangle|LLVMSupport|LLVMTableGen|clang|clang-*) # keep
        ;;
      # static libraries
      LLVM*|clang*|findAllSymbols)                              # yeet
        continue ;;
    esac
    echo $target
  done
}

prepare() {
  cd $srcdir/llvm-project-$pkgver.src
  patch -Np1 -i ../libstdcxx-on-macos.patch
  patch -Np1 -i ../sysroot-fix.patch
  patch -Np1 -i ../fix-clangd-paths.patch
}

build() {
  cd $srcdir/llvm-project-$pkgver.src
  # rm -rf build
  mkdir -p build
  cd build

  local _cmake_args=(
    -DCMAKE_BUILD_TYPE=Release
    -DCMAKE_C_FLAGS="${CFLAGS/-O2/-O3}"
    -DCMAKE_CXX_FLAGS="${CXXFLAGS/-O2/-O3}"
    -DCMAKE_INSTALL_PREFIX=${pacman_root}/usr/lib/llvm15
    -DCMAKE_INSTALL_NAME_DIR=${pacman_root}/usr/lib/llvm15
    -DLLVM_ENABLE_PROJECTS="clang;clang-tools-extra"
    -DLLVM_TARGETS_TO_BUILD="all"
    -DLLVM_PARALLEL_LINK_JOBS=1
    -DLLVM_ENABLE_RUNTIMES="compiler-rt;libcxx;libcxxabi;libunwind"
    -DLLVM_INSTALL_UTILS=ON
    -DLLVM_BUILD_LLVM_DYLIB=ON
    -DLLVM_LINK_LLVM_DYLIB=ON
    -DLLVM_ENABLE_LTO=Thin
    -DLLVM_BUILD_TESTS=ON
    -DDEFAULT_SYSROOT=$(xcrun --show-sdk-path)
    -DCOMPILER_RT_ENABLE_IOS=OFF
    -DBUILTINS_CMAKE_ARGS=-DCOMPILER_RT_ENABLE_IOS=OFF
  )

  cmake -S ../llvm -G Ninja "${_cmake_args[@]}"

  # now that ninja.build is generated, we can do that weird distribution-components thing
  local _dc=$(_get_distribution_components | paste -sd\; -)

  test -n "$_dc"
  _cmake_args+=(-DLLVM_DISTRIBUTION_COMPONENTS="$_dc")

  cmake -S ../llvm -G Ninja "${_cmake_args[@]}"
	ninja
}

check() {
  # tests fail but most of them pass so who cares right?
  cd $srcdir/llvm-project-$pkgver.src/build
  DYLD_FALLBACK_LIBRARY_PATH=$PWD/lib ninja -k0 check || :
}

package() {
	cd $srcdir/llvm-project-$pkgver.src
	DESTDIR="${pkgdir}" ninja -C build install

  # install versioned binary symlinks to /usr/bin/
  install -d "$pkgdir/${pacman_root}/usr/bin"
  local _binary
  for _binary in "$pkgdir"/${pacman_root}/usr/lib/llvm15/bin/*; do
    local _basename=${_binary##*/}
    ln -s ../lib/llvm15/bin/$_basename "$pkgdir/${pacman_root}/usr/bin/${_basename}-15"

    # ok but get rid of 'clang-15-15'
    rm -f $pkgdir/${pacman_root}/usr/bin/clang-15-15
  done


	# hmm, this is needed for some reason.
	_major=$(echo ${pkgver} | grep -Eo '[0-9]+' | head -1)
	ln -s ${pacman_root}/usr/lib/llvm15/libLLVM.dylib ${pkgdir}/${pacman_root}/usr/lib/libLLVM-${_major}.dylib
	ln -s ${pacman_root}/usr/lib/llvm15/libLLVM.dylib ${pkgdir}/${pacman_root}/usr/lib/libLLVM-${pkgver}.dylib

  msg 'Fixing compiler-rt dylib names'
  fix_rpath_v2 --search-prefix="${pacman_root}/usr/lib/llvm15/lib" \
    $(find ${pkgdir}/${pacman_root}/usr/lib/llvm15 -iname "libclang_rt.*.dylib")

	msg 'Fixing remaining things'
	fix_rpath_v2 $(find ${pkgdir}/${pacman_root}/usr/lib/llvm15 -iname '*.dylib')
  fix_rpath_v2 $(find ${pkgdir}/${pacman_root}/usr/lib/llvm15/bin/ -type f)
}










