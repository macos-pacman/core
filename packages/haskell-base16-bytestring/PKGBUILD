# Maintainer: zhiayang <zhiayang@nowhere>

_hkgname=base16-bytestring
pkgname=haskell-${_hkgname}
pkgver=1.0.2.0
pkgrel=1
pkgdesc="RFC 4648-compliant Base16 encodings for ByteStrings"
url="https://hackage.haskell.org/package/${_hkgname}"
license=('BSD')
arch=('x86_64' 'arm64')
depends=('ghc-libs'
  'haskell-bytestring'
)
checkdepends=(
  'haskell-hunit'
  'haskell-quickcheck'
  'haskell-test-framework'
  'haskell-test-framework-hunit'
  'haskell-test-framework-quickcheck2'
)
makedepends=('ghc' 'uusi')
source=("https://hackage.haskell.org/packages/archive/$_hkgname/$pkgver/$_hkgname-$pkgver.tar.gz")
sha512sums=('61e483c08f3cd81c0ffa891bd6f4aa5ff222d8184880deb5aeeae8184bd6efdbb373ca6bece2cd597490492107c91a2f4fd6ca9c71c712e298bce7418b9f7135')

prepare() {
  cd $_hkgname-$pkgver

  uusi                          \
    -u 'OneTuple'               \
    -u 'base-compat-batteries'  \
    -u 'base-orphans'           \
    -u 'base16-bytestring'      \
    -u 'generic-deriving'       \
    -u 'ghc-prim'               \
    -u 'semialign'              \
    -u 'strict'                 \
    -u 'template-haskell'       \
    -u 'these'                  \
    ${_hkgname}.cabal
}

# template start; name=haskell-default; version=1.0;
# default haskell build steps

build() {
# template start; name=haskell-build; version=1.0;
  cd $_hkgname-$pkgver

  local _opts
  if (( CHECKFUNC )) && [ -z ${_notests+x} ]; then
    _opts=('--enable-tests')
  else
    _opts=('--disable-tests')
  fi

  runhaskell Setup configure -O --disable-static --enable-shared --enable-executable-dynamic \
    --prefix=${pacman_root}/usr \
    --docdir=${pacman_root}/usr/share/doc/$pkgname \
    --datasubdir=$pkgname \
    --dynlibdir='$libdir' \
    -ftemplateHaskell --ghc-option=-fllvm --ghc-option=-fhide-source-paths \
    --flags="${_build_flags:-}" \
    "${_opts[@]}"

  runhaskell Setup build $MAKEFLAGS

  if [ -z ${_no_register+x} ]; then
    runhaskell Setup register --gen-script
    runhaskell Setup unregister --gen-script

    sed -i -r -e "s|ghc-pkg.*update[^ ]* |&'--force' |" register.sh
    sed -i -r -e "s|ghc-pkg.*unregister[^ ]* |&'--force' |" unregister.sh
  fi
# template end;
}

check() {
# template start; name=haskell-check; version=1.0;
  cd $_hkgname-$pkgver
  if [ -z ${_tests_can_fail+x} ]; then
    runhaskell Setup test --show-details=direct || true
  else
    runhaskell Setup test --show-details=direct
  fi
# template end;
}

package() {
# template start; name=haskell-package; version=1.0;
  cd $_hkgname-$pkgver

  if [ -z ${_no_register+x} ]; then
    install -D -m744 register.sh "$pkgdir/${pacman_root}/usr/share/haskell/register/$pkgname.sh"
    install -D -m744 unregister.sh "$pkgdir/${pacman_root}/usr/share/haskell/unregister/${pkgname}.sh"
  fi

  local _license_name=${license_name-LICENSE}

  runhaskell Setup copy --destdir="$pkgdir"
  install -D -m644 "${_license_name}" "$pkgdir/${pacman_root}/usr/share/licenses/$pkgname/LICENSE"
  rm "$pkgdir"/${pacman_root}/usr/share/doc/$pkgname/${_license_name}

  local dl; for dl in ${pkgdir}/${pacman_root}/usr/lib/*.dylib ${pkgdir}/${pacman_root}/usr/bin/* ; do
    [ ! -e "${dl}" ] || fix_rpath "${dl}"
  done
# template end;
}
# template end;

# vim: ts=2 sw=2 et:
