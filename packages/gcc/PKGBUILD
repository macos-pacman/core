# Maintainer: Giancarlo Razzolini <grazzolini@archlinux.org>
# Maintainer: Frederik Schwan <freswa at archlinux dot org>
# Contributor:  Bart≈Çomiej Piotrowski <bpiotrowski@archlinux.org>
# Contributor: Allan McRae <allan@archlinux.org>
# Contributor: Daniel Kozak <kozzi11@gmail.com>

pkgname=(gcc gcc-fortran gcc-objc gcc-libs)
pkgver=13.1.0
pkgrel=1
pkgdesc='The GNU Compiler Collection'
arch=('x86_64' 'arm64')
license=(GPL3 LGPL FDL custom)
url='https://gcc.gnu.org'
makedepends=(git autoconf python)
checkdepends=(dejagnu expect python-pytest tcl)
options=(!emptydirs !lto)
_chost=${CHOST/arm64/aarch64}
_libdir=usr/lib/gcc/$_chost/${pkgver%%+*}
source=(https://ftp.gnu.org/gnu/gcc/gcc-${pkgver}/gcc-${pkgver}.tar.xz{,.sig}
       "https://raw.githubusercontent.com/Homebrew/formula-patches/master/gcc/gcc-${pkgver}.diff"
       "sanitisers-undefined-dynamic-lookup.patch")
validpgpkeys=(F3691687D867B81B51CE07D9BBE43771487328A9  # bpiotrowski@archlinux.org
              86CFFCA918CF3AF47147588051E8B148A9999C34  # evangelos@foutrelis.com
              13975A70E63C361C73AE69EF6EEB81F8981C74C7  # richard.guenther@gmail.com
              D3A93CAD751C2AF4F8C7AD516C35B99309B5FA62) # Jakub Jelinek <jakub@redhat.com>
sha256sums=('61d684f0aa5e76ac6585ad8898a2427aade8979ed5e7f85492286c4dfc13ee86'
            'SKIP'
            'cb4e8a89387f748a744da0273025d0dc2e3c76780cc390b18ada704676afea11'
            '8ebf1788bd0d0cbcecdd13d2c88e1cecf523fb5bb4d4c1663f146e97e4e02b00')

prepare() {
  [[ ! -d gcc ]] && ln -s gcc-${pkgver/+/-} gcc
  cd gcc

  mkdir -p "$srcdir/gcc-build"
  mkdir -p "$srcdir/libgccjit-build"

  # yes, we are patching a patch
  cp ../gcc-13.1.0.diff ./gcc-13.1.0.patch
  patch -Np1 -i ../sanitisers-undefined-dynamic-lookup.patch

  patch -Np1 -i gcc-13.1.0.patch

  # download dependencies
  contrib/download_prerequisites

}

build() {
  local _confflags=(
      --prefix=${pacman_root}/usr
      --libdir=${pacman_root}/usr/lib
      --libexecdir=${pacman_root}/usr/lib
      --mandir=${pacman_root}/usr/share/man
      --infodir=${pacman_root}/usr/share/info
      --with-sysroot=$(xcrun --show-sdk-path)
      --with-system-zlib
      --enable-libsanitizer
      --enable-checking=release
      --disable-darwin-at-rpath
      --disable-multilib
      --enable-plugin
      --disable-werror
      --disable-nls
  )

  cd gcc-build

  # Credits @allanmcrae
  # https://github.com/allanmcrae/toolchain/blob/f18604d70c5933c31b51a320978711e4e6791cf1/gcc/PKGBUILD
  # TODO: properly deal with the build issues resulting from this
  CFLAGS=${CFLAGS/-Werror=format-security/}
  CXXFLAGS=${CXXFLAGS/-Werror=format-security/}

  CFLAGS=${CFLAGS/-march=native/}
  CXXFLAGS=${CXXFLAGS/-march=native/}

  "$srcdir/gcc/configure" \
    --enable-languages=c,c++,fortran,lto,objc,obj-c++ \
    --enable-bootstrap \
    "${_confflags[@]:?_confflags unset}"

  # see https://bugs.archlinux.org/task/71777 for rationale re *FLAGS handling
  # note: -Wl,-undefined,dynamic_lookup is needed for sanitizers to build properly (apparently)
  make STAGE1_CFLAGS="-O2 -Wno-mismatched-tags" \
          BOOT_CFLAGS="$CFLAGS -Wno-error=deprecated-declarations -Wno-mismatched-tags" \
          BOOT_LDFLAGS="$LDFLAGS" \
          LDFLAGS_FOR_TARGET="$LDFLAGS" \
          bootstrap

  # make documentation
  # TODO

  # Build libgccjit separately, to avoid building all compilers with --enable-host-shared
  # which brings a performance penalty
  cd "${srcdir}"/libgccjit-build

  "$srcdir/gcc/configure" \
    --enable-languages=jit \
    --disable-bootstrap \
    --enable-host-shared \
    "${_confflags[@]:?_confflags unset}"

  # see https://bugs.archlinux.org/task/71777 for rationale re *FLAGS handling
  make STAGE1_CFLAGS="-O2 -Wno-mismatched-tags" \
          BOOT_CFLAGS="$CFLAGS -Wno-mismatched-tags" \
          BOOT_LDFLAGS="$LDFLAGS" \
          LDFLAGS_FOR_TARGET="$LDFLAGS" \
          all-gcc

  cp -a gcc/libgccjit.*.dylib ../gcc-build/gcc/
}

check() {
  cd gcc-build

  # disable libphobos test to avoid segfaults
  sed -i '/maybe-check-target-libphobos \\/d' Makefile

  # do not abort on error as some are "expected"
  make -k check || true
  "$srcdir/gcc/contrib/test_summary"
}

package_gcc-libs() {
  pkgdesc='Runtime libraries shipped by GCC'
  options=(!emptydirs !strip)
  provides=(libgfortran.dylib libubsan.dylib libasan.dylib liblsan.dylib) # no go, D, nor tsan

  cd gcc-build
  make -C ${_chost}/libgcc DESTDIR="$pkgdir" install-shared
  rm -f "$pkgdir/${pacman_root}/$_libdir/libgcc_eh.a"

  # note: no tsan
  for lib in libatomic \
             libgfortran \
             libgomp \
             libitm \
             libquadmath \
             libsanitizer/{a,l,ub}san \
             libstdc++-v3/src; do
    make -C ${_chost}/$lib DESTDIR="$pkgdir" install-toolexeclibLTLIBRARIES
  done

  make -C ${_chost}/libobjc DESTDIR="$pkgdir" install-libs
  make -C ${_chost}/libstdc++-v3/po DESTDIR="$pkgdir" install

  # make -C ${_chost}/libphobos DESTDIR="$pkgdir" install
  # rm -rf "$pkgdir"/${pacman_root}/$_libdir/include/d/
  # rm -f "$pkgdir"/${pacman_root}/usr/lib/libgphobos.spec

  for lib in libgomp \
             libitm \
             libquadmath; do
    make -C ${_chost}/$lib DESTDIR="$pkgdir" install-info
  done

  # Install Runtime Library Exception
  install -Dm644 "$srcdir/gcc/COPYING.RUNTIME" \
    "$pkgdir/${pacman_root}/usr/share/licenses/gcc-libs/RUNTIME.LIBRARY.EXCEPTION"
}

package_gcc() {
  pkgdesc="The GNU Compiler Collection - C and C++ frontends"
  depends=(zstd)
  options=(!emptydirs staticlibs)

  cd gcc-build

  make -C gcc DESTDIR="$pkgdir" install-driver install-cpp install-gcc-ar \
    c++.install-common install-headers install-plugin install-lto-wrapper

  install -m755 -t "$pkgdir/${pacman_root}/usr/bin/" gcc/gcov{,-tool}
  install -m755 -t "$pkgdir/${pacman_root}/${_libdir}/" gcc/{cc1,cc1plus,collect2,lto1}

  make -C ${_chost}/libgcc DESTDIR="$pkgdir" install
  rm -f "$pkgdir"/usr/lib/libgcc_s.*.dylib

  make -C ${_chost}/libstdc++-v3/src DESTDIR="$pkgdir" install
  make -C ${_chost}/libstdc++-v3/include DESTDIR="$pkgdir" install
  make -C ${_chost}/libstdc++-v3/libsupc++ DESTDIR="$pkgdir" install
  make -C ${_chost}/libstdc++-v3/python DESTDIR="$pkgdir" install

  make DESTDIR="$pkgdir" install-libcc1
  install -d "$pkgdir/${pacman_root}/usr/share/gdb/auto-load/usr/lib"
  mv "$pkgdir"/${pacman_root}/usr/lib/libstdc++.*-gdb.py \
    "$pkgdir/${pacman_root}/usr/share/gdb/auto-load/usr/lib/"

  rm -f "$pkgdir"/${pacman_root}/usr/lib/libstdc++.{a,la,dylib}
  rm -f "$pkgdir"/${pacman_root}/usr/lib/libstdc++.*.{a,la,dylib}

  make DESTDIR="$pkgdir" install-fixincludes
  make -C gcc DESTDIR="$pkgdir" install-mkheaders

  # make -C lto-plugin DESTDIR="$pkgdir" install
  # install -dm755 "$pkgdir"/${pacman_root}/usr/lib/bfd-plugins/
  # ln -s /${pacman_root}/${_libdir}/liblto_plugin.dylib \
  #  "$pkgdir/${pacman_root}/usr/lib/bfd-plugins/"

  make -C ${_chost}/libgomp DESTDIR="$pkgdir" install-nodist_{libsubinclude,toolexeclib}HEADERS
  make -C ${_chost}/libitm DESTDIR="$pkgdir" install-nodist_toolexeclibHEADERS
  make -C ${_chost}/libquadmath DESTDIR="$pkgdir" install-nodist_libsubincludeHEADERS
  make -C ${_chost}/libsanitizer DESTDIR="$pkgdir" install-nodist_{saninclude,toolexeclib}HEADERS
  make -C ${_chost}/libsanitizer/asan DESTDIR="$pkgdir" install-nodist_toolexeclibHEADERS
  make -C ${_chost}/libsanitizer/lsan DESTDIR="$pkgdir" install-nodist_toolexeclibHEADERS

  # gcc doesn't support tsan on macos...
  # make -C ${_chost}/libsanitizer/tsan DESTDIR="$pkgdir" install-nodist_toolexeclibHEADERS

  make -C gcc DESTDIR="$pkgdir" install-man install-info
  rm -f "$pkgdir"/${pacman_root}/usr/share/man/man1/{gfortran,lto-dump}.1
  rm -f "$pkgdir"/${pacman_root}/usr/share/info/{gfortran}.info

  make -C libcpp DESTDIR="$pkgdir" install
  make -C gcc DESTDIR="$pkgdir" install-po

  # install the libstdc++ man pages
  # make -C ${_chost}/libstdc++-v3/doc DESTDIR="$pkgdir" doc-install-man

  # yeet the gfortran thing (it goes in gfortran)
  rm -f "$pkgdir/${pacman_root}/usr/share/info/gfortran.info"

  # byte-compile python libraries
  python -m compileall "$pkgdir/${pacman_root}/usr/share/gcc-${pkgver%%+*}/"
  python -O -m compileall "$pkgdir/${pacman_root}/usr/share/gcc-${pkgver%%+*}/"

  # Install Runtime Library Exception
  install -d "$pkgdir/${pacman_root}/usr/share/licenses/$pkgname/"
  ln -s /${pacman_root}/usr/share/licenses/gcc-libs/RUNTIME.LIBRARY.EXCEPTION \
    "$pkgdir/${pacman_root}/usr/share/licenses/$pkgname/"
}

package_gcc-fortran() {
  pkgdesc='Fortran front-end for GCC'
  depends=("gcc=$pkgver-$pkgrel")

  cd gcc-build
  make -C ${_chost}/libgfortran DESTDIR="$pkgdir" install-cafexeclibLTLIBRARIES \
    install-{toolexeclibDATA,nodist_fincludeHEADERS,gfor_cHEADERS}
  make -C ${_chost}/libgomp DESTDIR="$pkgdir" install-nodist_fincludeHEADERS
  make -C gcc DESTDIR="$pkgdir" fortran.install-{common,man,info}
  install -Dm755 gcc/f951 "$pkgdir/${pacman_root}/${_libdir}/f951"

  ln -s gfortran "$pkgdir/${pacman_root}/usr/bin/f95"

  # Install Runtime Library Exception
  install -d "$pkgdir/${pacman_root}/usr/share/licenses/$pkgname/"
  ln -s /${pacman_root}/usr/share/licenses/gcc-libs/RUNTIME.LIBRARY.EXCEPTION \
    "$pkgdir/${pacman_root}/usr/share/licenses/$pkgname/"
}

package_gcc-objc() {
  pkgdesc='Objective-C front-end for GCC'
  depends=("gcc=$pkgver-$pkgrel")

  cd gcc-build
  make DESTDIR="$pkgdir" -C ${_chost}/libobjc install-headers
  install -dm755 "$pkgdir/${pacman_root}/${_libdir}"
  install -m755 gcc/cc1obj{,plus} "$pkgdir/${pacman_root}/${_libdir}/"

  # Install Runtime Library Exception
  install -d "$pkgdir/${pacman_root}/usr/share/licenses/$pkgname/"
  ln -s /${pacman_root}/usr/share/licenses/gcc-libs/RUNTIME.LIBRARY.EXCEPTION \
    "$pkgdir/${pacman_root}/usr/share/licenses/$pkgname/"
}

package_lto-dump() {
  pkgdesc="Dump link time optimization object files"
  depends=("gcc=$pkgver-$pkgrel")

  cd gcc-build
  make -C gcc DESTDIR="$pkgdir" lto.install-{common,man,info}

  # Install Runtime Library Exception
  install -d "$pkgdir/${pacman_root}/usr/share/licenses/$pkgname/"
  ln -s /${pacman_root}/usr/share/licenses/gcc-libs/RUNTIME.LIBRARY.EXCEPTION \
    "$pkgdir/${pacman_root}/usr/share/licenses/$pkgname/"
}

package_libgccjit() {
  pkgdesc="Just-In-Time Compilation with GCC backend"
  depends=("gcc=$pkgver-$pkgrel")

  cd gcc-build
  make -C gcc DESTDIR="$pkgdir" jit.install-common jit.install-info

  # Install Runtime Library Exception
  install -d "$pkgdir/${pacman_root}/usr/share/licenses/$pkgname/"
  ln -s /${pacman_root}/usr/share/licenses/gcc-libs/RUNTIME.LIBRARY.EXCEPTION \
    "$pkgdir/${pacman_root}/usr/share/licenses/$pkgname/"
}
